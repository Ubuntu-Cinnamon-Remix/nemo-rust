// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ../gir-files
// DO NOT EDIT

use glib::translate::*;
use std::fmt;

#[derive(Debug, Eq, PartialEq, Ord, PartialOrd, Hash)]
#[derive(Clone, Copy)]
#[non_exhaustive]
#[doc(alias = "NemoOperationResult")]
pub enum OperationResult {
    #[doc(alias = "NEMO_OPERATION_COMPLETE")]
    Complete,
    #[doc(alias = "NEMO_OPERATION_FAILED")]
    Failed,
    #[doc(alias = "NEMO_OPERATION_IN_PROGRESS")]
    InProgress,
#[doc(hidden)]
    __Unknown(i32),
}

impl fmt::Display for OperationResult {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "OperationResult::{}", match *self {
            Self::Complete => "Complete",
            Self::Failed => "Failed",
            Self::InProgress => "InProgress",
            _ => "Unknown",
        })
    }
}

#[doc(hidden)]
impl IntoGlib for OperationResult {
    type GlibType = ffi::NemoOperationResult;

    fn into_glib(self) -> ffi::NemoOperationResult {
        match self {
            Self::Complete => ffi::NEMO_OPERATION_COMPLETE,
            Self::Failed => ffi::NEMO_OPERATION_FAILED,
            Self::InProgress => ffi::NEMO_OPERATION_IN_PROGRESS,
            Self::__Unknown(value) => value,
}
    }
}

#[doc(hidden)]
impl FromGlib<ffi::NemoOperationResult> for OperationResult {
    unsafe fn from_glib(value: ffi::NemoOperationResult) -> Self {
        skip_assert_initialized!();
        match value {
            ffi::NEMO_OPERATION_COMPLETE => Self::Complete,
            ffi::NEMO_OPERATION_FAILED => Self::Failed,
            ffi::NEMO_OPERATION_IN_PROGRESS => Self::InProgress,
            value => Self::__Unknown(value),
}
    }
}

